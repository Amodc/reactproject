{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-website\\\\src\\\\pages\\\\MainToDoItems.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDoApp from './ToDoApp';\nimport RemoveToDoItems from './RemoveToDoItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainToDoItems() {\n  _s();\n  const [listToDo, setListToDo] = useState([]);\n  let addToDoList = inputText => {\n    if (inputText !== \"\") setListToDo([...listToDo, inputText]);\n  };\n  const deleteListItem = key => {\n    let newListItem = [...listToDo];\n    listToDo.splice(key, 1);\n    setListToDo([...listToDo]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToDoApp, {\n      addToDoList: addToDoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"New Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), listToDo.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(RemoveToDoItems, {\n        index: i,\n        item: item,\n        deleteItem: deleteListItem\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(MainToDoItems, \"uu3SHLIQA/idaEjZbTy+YEiF8/4=\");\n_c = MainToDoItems;\nexport default MainToDoItems;\nvar _c;\n$RefreshReg$(_c, \"MainToDoItems\");","map":{"version":3,"names":["React","useState","ToDoApp","RemoveToDoItems","jsxDEV","_jsxDEV","MainToDoItems","_s","listToDo","setListToDo","addToDoList","inputText","deleteListItem","key","newListItem","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","i","index","deleteItem","_c","$RefreshReg$"],"sources":["D:/my-website/src/pages/MainToDoItems.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport ToDoApp from './ToDoApp'\r\nimport RemoveToDoItems from './RemoveToDoItems';\r\n\r\nfunction MainToDoItems() {\r\n\r\nconst [listToDo, setListToDo] = useState([]);\r\nlet addToDoList = (inputText) => {\r\n    if(inputText !== \"\")\r\n        setListToDo([...listToDo, inputText]);\r\n}\r\n\r\nconst deleteListItem = (key) => {\r\n    let newListItem = [...listToDo];\r\n    listToDo.splice(key,1)\r\n    setListToDo([...listToDo])\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <ToDoApp addToDoList={addToDoList}/>\r\n      <h4 >New Todo List</h4>\r\n      {listToDo.map((item, i)=>{\r\n        return(\r\n            <RemoveToDoItems key={i} index={i} item={item} deleteItem={deleteListItem}/>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainToDoItems\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAEzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAIS,WAAW,GAAIC,SAAS,IAAK;IAC7B,IAAGA,SAAS,KAAK,EAAE,EACfF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,SAAS,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,cAAc,GAAIC,GAAG,IAAK;IAC5B,IAAIC,WAAW,GAAG,CAAC,GAAGN,QAAQ,CAAC;IAC/BA,QAAQ,CAACO,MAAM,CAACF,GAAG,EAAC,CAAC,CAAC;IACtBJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAC,CAAC;EAC9B,CAAC;EAEC,oBACEH,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACH,OAAO;MAACQ,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpCf,OAAA;MAAAW,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBZ,QAAQ,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAG;MACvB,oBACIlB,OAAA,CAACF,eAAe;QAASqB,KAAK,EAAED,CAAE;QAACD,IAAI,EAAEA,IAAK;QAACG,UAAU,EAAEb;MAAe,GAApDW,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoD,CAAC;IAElF,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACb,EAAA,CAzBQD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA2BtB,eAAeA,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}